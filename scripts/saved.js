//----------------------------------------------------------
// This function is the only function that's called.
// This strategy gives us better control of the page.
//----------------------------------------------------------
function doAll() {
    firebase.auth().onAuthStateChanged(user => {
        if (user) {
            insertNameFromFirestore(user);
            getBookmarks(user)
        } else {
            console.log("No user is signed in");
        }
    });
}
doAll();

//----------------------------------------------------------
// Wouldn't it be nice to see the User's Name on this page?
// Let's do it!  (Thinking ahead:  This function can be carved out, 
// and put into script.js for other pages to use as well).
//----------------------------------------------------------//----------------------------------------------------------
function insertNameFromFirestore(user) {
            db.collection("users").doc(user.uid).get().then(userDoc => {
                console.log(userDoc.data().name)
                userName = userDoc.data().name;
                console.log(userName)
                document.getElementById("name-goes-here").innerHTML = userName;
            })
}

//----------------------------------------------------------
// This function takes input param User's Firestore document pointer
// and retrieves the "saved" array (of bookmarks) 
// and dynamically displays them in the gallery
//----------------------------------------------------------
function getBookmarks(user) {
    db.collection("users").doc(user.uid).get()
        .then(userDoc => {

			// Get the Array of bookmarks
            var bookmarks = userDoc.data().bookmarks;
            console.log(bookmarks);
						
			// Get pointer the new card template
            let newcardTemplate = document.getElementById("savedCardTemplate");

			// Iterate through the ARRAY of bookmarked posts (document ID's)
            bookmarks.forEach(docID => {
                console.log(docID);
                db.collection("categories").doc(docID).get().then(doc => {
                    console.log();
                    var postTitle = doc.data().title; // get value of the "name" key
                    var postImg = doc.data().image; //get unique ID to each post to be used for fetching right image
                    var postDescription = doc.data().length; //gets the description field
                    var docID = doc.id;  //this is the autogenerated ID of the document
                    
                    //clone the new card
                    let newcard = newcardTemplate.content.cloneNode(true);

                    // update title and some pertinant information
                    newcard.querySelector('.card-title').innerHTML = postTitle;
                    newcard.querySelector('.card-description').innerHTML =  postDescription;
                    newcard.querySelector('.card-image').src = postImg;
                    newcard.querySelector('a').href = "view_message.html?postID=" + docID;

                    // NEW LINE: update to display length, duration, last updated
                    newcard.querySelector('.card-description').innerHTML =
                        "Posted date: " + doc.data().date

					// attach this new card to the gallery
                    hikeCardGroup.appendChild(newcard);
                })
            });
        })
}